
SEVSEG_APP.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000bf0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000b1c  00000000  00000000  00000c44  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000005b4  00000000  00000000  00001760  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 de 05 	call	0xbbc	; 0xbbc <main>
  64:	0c 94 f6 05 	jmp	0xbec	; 0xbec <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_voidSetPortDirection>:
#include "../../LIB/STD_Types.h"
#include "DIO_private.h"
#include "DIO_config.h"
#include "DIO_interface.h"

void DIO_voidSetPortDirection(u8 Copy_u8PortID,u8 Copy_u8PortDir){
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_voidSetPortDirection+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_voidSetPortDirection+0x8>
  74:	cd b7       	in	r28, 0x3d	; 61
  76:	de b7       	in	r29, 0x3e	; 62
  78:	89 83       	std	Y+1, r24	; 0x01
  7a:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortID){
  7c:	89 81       	ldd	r24, Y+1	; 0x01
  7e:	28 2f       	mov	r18, r24
  80:	30 e0       	ldi	r19, 0x00	; 0
  82:	3c 83       	std	Y+4, r19	; 0x04
  84:	2b 83       	std	Y+3, r18	; 0x03
  86:	8b 81       	ldd	r24, Y+3	; 0x03
  88:	9c 81       	ldd	r25, Y+4	; 0x04
  8a:	81 30       	cpi	r24, 0x01	; 1
  8c:	91 05       	cpc	r25, r1
  8e:	d1 f0       	breq	.+52     	; 0xc4 <DIO_voidSetPortDirection+0x58>
  90:	2b 81       	ldd	r18, Y+3	; 0x03
  92:	3c 81       	ldd	r19, Y+4	; 0x04
  94:	22 30       	cpi	r18, 0x02	; 2
  96:	31 05       	cpc	r19, r1
  98:	2c f4       	brge	.+10     	; 0xa4 <DIO_voidSetPortDirection+0x38>
  9a:	8b 81       	ldd	r24, Y+3	; 0x03
  9c:	9c 81       	ldd	r25, Y+4	; 0x04
  9e:	00 97       	sbiw	r24, 0x00	; 0
  a0:	61 f0       	breq	.+24     	; 0xba <DIO_voidSetPortDirection+0x4e>
  a2:	1e c0       	rjmp	.+60     	; 0xe0 <DIO_voidSetPortDirection+0x74>
  a4:	2b 81       	ldd	r18, Y+3	; 0x03
  a6:	3c 81       	ldd	r19, Y+4	; 0x04
  a8:	22 30       	cpi	r18, 0x02	; 2
  aa:	31 05       	cpc	r19, r1
  ac:	81 f0       	breq	.+32     	; 0xce <DIO_voidSetPortDirection+0x62>
  ae:	8b 81       	ldd	r24, Y+3	; 0x03
  b0:	9c 81       	ldd	r25, Y+4	; 0x04
  b2:	83 30       	cpi	r24, 0x03	; 3
  b4:	91 05       	cpc	r25, r1
  b6:	81 f0       	breq	.+32     	; 0xd8 <DIO_voidSetPortDirection+0x6c>
  b8:	13 c0       	rjmp	.+38     	; 0xe0 <DIO_voidSetPortDirection+0x74>
		case PORTA/*Port A*/: DDRA_REG=Copy_u8PortDir;break;
  ba:	ea e3       	ldi	r30, 0x3A	; 58
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	8a 81       	ldd	r24, Y+2	; 0x02
  c0:	80 83       	st	Z, r24
  c2:	0e c0       	rjmp	.+28     	; 0xe0 <DIO_voidSetPortDirection+0x74>
		case PORTB/*Port B*/: DDRB_REG=Copy_u8PortDir;break;
  c4:	e7 e3       	ldi	r30, 0x37	; 55
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	8a 81       	ldd	r24, Y+2	; 0x02
  ca:	80 83       	st	Z, r24
  cc:	09 c0       	rjmp	.+18     	; 0xe0 <DIO_voidSetPortDirection+0x74>
		case PORTC/*Port C*/: DDRC_REG=Copy_u8PortDir;break;
  ce:	e4 e3       	ldi	r30, 0x34	; 52
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	8a 81       	ldd	r24, Y+2	; 0x02
  d4:	80 83       	st	Z, r24
  d6:	04 c0       	rjmp	.+8      	; 0xe0 <DIO_voidSetPortDirection+0x74>
		case PORTD/*Port D*/: DDRD_REG=Copy_u8PortDir;break;
  d8:	e1 e3       	ldi	r30, 0x31	; 49
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	8a 81       	ldd	r24, Y+2	; 0x02
  de:	80 83       	st	Z, r24
	}
}
  e0:	0f 90       	pop	r0
  e2:	0f 90       	pop	r0
  e4:	0f 90       	pop	r0
  e6:	0f 90       	pop	r0
  e8:	cf 91       	pop	r28
  ea:	df 91       	pop	r29
  ec:	08 95       	ret

000000ee <DIO_voidSetPortValue>:

void DIO_voidSetPortValue(u8 Copy_u8PortID,u8 Copy_u8PortValue){
  ee:	df 93       	push	r29
  f0:	cf 93       	push	r28
  f2:	00 d0       	rcall	.+0      	; 0xf4 <DIO_voidSetPortValue+0x6>
  f4:	00 d0       	rcall	.+0      	; 0xf6 <DIO_voidSetPortValue+0x8>
  f6:	cd b7       	in	r28, 0x3d	; 61
  f8:	de b7       	in	r29, 0x3e	; 62
  fa:	89 83       	std	Y+1, r24	; 0x01
  fc:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortID){
  fe:	89 81       	ldd	r24, Y+1	; 0x01
 100:	28 2f       	mov	r18, r24
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	3c 83       	std	Y+4, r19	; 0x04
 106:	2b 83       	std	Y+3, r18	; 0x03
 108:	8b 81       	ldd	r24, Y+3	; 0x03
 10a:	9c 81       	ldd	r25, Y+4	; 0x04
 10c:	81 30       	cpi	r24, 0x01	; 1
 10e:	91 05       	cpc	r25, r1
 110:	d1 f0       	breq	.+52     	; 0x146 <DIO_voidSetPortValue+0x58>
 112:	2b 81       	ldd	r18, Y+3	; 0x03
 114:	3c 81       	ldd	r19, Y+4	; 0x04
 116:	22 30       	cpi	r18, 0x02	; 2
 118:	31 05       	cpc	r19, r1
 11a:	2c f4       	brge	.+10     	; 0x126 <DIO_voidSetPortValue+0x38>
 11c:	8b 81       	ldd	r24, Y+3	; 0x03
 11e:	9c 81       	ldd	r25, Y+4	; 0x04
 120:	00 97       	sbiw	r24, 0x00	; 0
 122:	61 f0       	breq	.+24     	; 0x13c <DIO_voidSetPortValue+0x4e>
 124:	1e c0       	rjmp	.+60     	; 0x162 <DIO_voidSetPortValue+0x74>
 126:	2b 81       	ldd	r18, Y+3	; 0x03
 128:	3c 81       	ldd	r19, Y+4	; 0x04
 12a:	22 30       	cpi	r18, 0x02	; 2
 12c:	31 05       	cpc	r19, r1
 12e:	81 f0       	breq	.+32     	; 0x150 <DIO_voidSetPortValue+0x62>
 130:	8b 81       	ldd	r24, Y+3	; 0x03
 132:	9c 81       	ldd	r25, Y+4	; 0x04
 134:	83 30       	cpi	r24, 0x03	; 3
 136:	91 05       	cpc	r25, r1
 138:	81 f0       	breq	.+32     	; 0x15a <DIO_voidSetPortValue+0x6c>
 13a:	13 c0       	rjmp	.+38     	; 0x162 <DIO_voidSetPortValue+0x74>
		case PORTA/*Port A*/: PORTA_REG=Copy_u8PortValue;break;
 13c:	eb e3       	ldi	r30, 0x3B	; 59
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	8a 81       	ldd	r24, Y+2	; 0x02
 142:	80 83       	st	Z, r24
 144:	0e c0       	rjmp	.+28     	; 0x162 <DIO_voidSetPortValue+0x74>
		case PORTB/*Port B*/: PORTB_REG=Copy_u8PortValue;break;
 146:	e8 e3       	ldi	r30, 0x38	; 56
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	8a 81       	ldd	r24, Y+2	; 0x02
 14c:	80 83       	st	Z, r24
 14e:	09 c0       	rjmp	.+18     	; 0x162 <DIO_voidSetPortValue+0x74>
		case PORTC/*Port C*/: PORTC_REG=Copy_u8PortValue;break;
 150:	e5 e3       	ldi	r30, 0x35	; 53
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	8a 81       	ldd	r24, Y+2	; 0x02
 156:	80 83       	st	Z, r24
 158:	04 c0       	rjmp	.+8      	; 0x162 <DIO_voidSetPortValue+0x74>
		case PORTD/*Port D*/: PORTD_REG=Copy_u8PortValue;break;
 15a:	e2 e3       	ldi	r30, 0x32	; 50
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	8a 81       	ldd	r24, Y+2	; 0x02
 160:	80 83       	st	Z, r24
	}
}
 162:	0f 90       	pop	r0
 164:	0f 90       	pop	r0
 166:	0f 90       	pop	r0
 168:	0f 90       	pop	r0
 16a:	cf 91       	pop	r28
 16c:	df 91       	pop	r29
 16e:	08 95       	ret

00000170 <DIO_voidSetPinDirection>:

void DIO_voidSetPinDirection(u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8PinDir){
 170:	df 93       	push	r29
 172:	cf 93       	push	r28
 174:	cd b7       	in	r28, 0x3d	; 61
 176:	de b7       	in	r29, 0x3e	; 62
 178:	27 97       	sbiw	r28, 0x07	; 7
 17a:	0f b6       	in	r0, 0x3f	; 63
 17c:	f8 94       	cli
 17e:	de bf       	out	0x3e, r29	; 62
 180:	0f be       	out	0x3f, r0	; 63
 182:	cd bf       	out	0x3d, r28	; 61
 184:	89 83       	std	Y+1, r24	; 0x01
 186:	6a 83       	std	Y+2, r22	; 0x02
 188:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8PinDir==PIN_OUTPUT){     //output
 18a:	8b 81       	ldd	r24, Y+3	; 0x03
 18c:	81 30       	cpi	r24, 0x01	; 1
 18e:	09 f0       	breq	.+2      	; 0x192 <DIO_voidSetPinDirection+0x22>
 190:	6f c0       	rjmp	.+222    	; 0x270 <DIO_voidSetPinDirection+0x100>
		switch(Copy_u8PortID){
 192:	89 81       	ldd	r24, Y+1	; 0x01
 194:	28 2f       	mov	r18, r24
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	3f 83       	std	Y+7, r19	; 0x07
 19a:	2e 83       	std	Y+6, r18	; 0x06
 19c:	8e 81       	ldd	r24, Y+6	; 0x06
 19e:	9f 81       	ldd	r25, Y+7	; 0x07
 1a0:	81 30       	cpi	r24, 0x01	; 1
 1a2:	91 05       	cpc	r25, r1
 1a4:	49 f1       	breq	.+82     	; 0x1f8 <DIO_voidSetPinDirection+0x88>
 1a6:	2e 81       	ldd	r18, Y+6	; 0x06
 1a8:	3f 81       	ldd	r19, Y+7	; 0x07
 1aa:	22 30       	cpi	r18, 0x02	; 2
 1ac:	31 05       	cpc	r19, r1
 1ae:	2c f4       	brge	.+10     	; 0x1ba <DIO_voidSetPinDirection+0x4a>
 1b0:	8e 81       	ldd	r24, Y+6	; 0x06
 1b2:	9f 81       	ldd	r25, Y+7	; 0x07
 1b4:	00 97       	sbiw	r24, 0x00	; 0
 1b6:	61 f0       	breq	.+24     	; 0x1d0 <DIO_voidSetPinDirection+0x60>
 1b8:	d2 c0       	rjmp	.+420    	; 0x35e <DIO_voidSetPinDirection+0x1ee>
 1ba:	2e 81       	ldd	r18, Y+6	; 0x06
 1bc:	3f 81       	ldd	r19, Y+7	; 0x07
 1be:	22 30       	cpi	r18, 0x02	; 2
 1c0:	31 05       	cpc	r19, r1
 1c2:	71 f1       	breq	.+92     	; 0x220 <DIO_voidSetPinDirection+0xb0>
 1c4:	8e 81       	ldd	r24, Y+6	; 0x06
 1c6:	9f 81       	ldd	r25, Y+7	; 0x07
 1c8:	83 30       	cpi	r24, 0x03	; 3
 1ca:	91 05       	cpc	r25, r1
 1cc:	e9 f1       	breq	.+122    	; 0x248 <DIO_voidSetPinDirection+0xd8>
 1ce:	c7 c0       	rjmp	.+398    	; 0x35e <DIO_voidSetPinDirection+0x1ee>
			case PORTA/*Port A*/: SET_BIT(DDRA_REG,Copy_u8PinID);break;
 1d0:	aa e3       	ldi	r26, 0x3A	; 58
 1d2:	b0 e0       	ldi	r27, 0x00	; 0
 1d4:	ea e3       	ldi	r30, 0x3A	; 58
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	80 81       	ld	r24, Z
 1da:	48 2f       	mov	r20, r24
 1dc:	8a 81       	ldd	r24, Y+2	; 0x02
 1de:	28 2f       	mov	r18, r24
 1e0:	30 e0       	ldi	r19, 0x00	; 0
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	02 2e       	mov	r0, r18
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <DIO_voidSetPinDirection+0x7e>
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	0a 94       	dec	r0
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <DIO_voidSetPinDirection+0x7a>
 1f2:	84 2b       	or	r24, r20
 1f4:	8c 93       	st	X, r24
 1f6:	b3 c0       	rjmp	.+358    	; 0x35e <DIO_voidSetPinDirection+0x1ee>
			case PORTB/*Port B*/: SET_BIT(DDRB_REG,Copy_u8PinID);break;
 1f8:	a7 e3       	ldi	r26, 0x37	; 55
 1fa:	b0 e0       	ldi	r27, 0x00	; 0
 1fc:	e7 e3       	ldi	r30, 0x37	; 55
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	80 81       	ld	r24, Z
 202:	48 2f       	mov	r20, r24
 204:	8a 81       	ldd	r24, Y+2	; 0x02
 206:	28 2f       	mov	r18, r24
 208:	30 e0       	ldi	r19, 0x00	; 0
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	02 2e       	mov	r0, r18
 210:	02 c0       	rjmp	.+4      	; 0x216 <DIO_voidSetPinDirection+0xa6>
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	0a 94       	dec	r0
 218:	e2 f7       	brpl	.-8      	; 0x212 <DIO_voidSetPinDirection+0xa2>
 21a:	84 2b       	or	r24, r20
 21c:	8c 93       	st	X, r24
 21e:	9f c0       	rjmp	.+318    	; 0x35e <DIO_voidSetPinDirection+0x1ee>
			case PORTC/*Port C*/: SET_BIT(DDRC_REG,Copy_u8PinID);break;
 220:	a4 e3       	ldi	r26, 0x34	; 52
 222:	b0 e0       	ldi	r27, 0x00	; 0
 224:	e4 e3       	ldi	r30, 0x34	; 52
 226:	f0 e0       	ldi	r31, 0x00	; 0
 228:	80 81       	ld	r24, Z
 22a:	48 2f       	mov	r20, r24
 22c:	8a 81       	ldd	r24, Y+2	; 0x02
 22e:	28 2f       	mov	r18, r24
 230:	30 e0       	ldi	r19, 0x00	; 0
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	02 2e       	mov	r0, r18
 238:	02 c0       	rjmp	.+4      	; 0x23e <DIO_voidSetPinDirection+0xce>
 23a:	88 0f       	add	r24, r24
 23c:	99 1f       	adc	r25, r25
 23e:	0a 94       	dec	r0
 240:	e2 f7       	brpl	.-8      	; 0x23a <DIO_voidSetPinDirection+0xca>
 242:	84 2b       	or	r24, r20
 244:	8c 93       	st	X, r24
 246:	8b c0       	rjmp	.+278    	; 0x35e <DIO_voidSetPinDirection+0x1ee>
			case PORTD/*Port D*/: SET_BIT(DDRD_REG,Copy_u8PinID);break;
 248:	a1 e3       	ldi	r26, 0x31	; 49
 24a:	b0 e0       	ldi	r27, 0x00	; 0
 24c:	e1 e3       	ldi	r30, 0x31	; 49
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	80 81       	ld	r24, Z
 252:	48 2f       	mov	r20, r24
 254:	8a 81       	ldd	r24, Y+2	; 0x02
 256:	28 2f       	mov	r18, r24
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	02 2e       	mov	r0, r18
 260:	02 c0       	rjmp	.+4      	; 0x266 <DIO_voidSetPinDirection+0xf6>
 262:	88 0f       	add	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	0a 94       	dec	r0
 268:	e2 f7       	brpl	.-8      	; 0x262 <DIO_voidSetPinDirection+0xf2>
 26a:	84 2b       	or	r24, r20
 26c:	8c 93       	st	X, r24
 26e:	77 c0       	rjmp	.+238    	; 0x35e <DIO_voidSetPinDirection+0x1ee>
		}
	}
	else if(Copy_u8PinDir==PIN_INPUT){ //input
 270:	8b 81       	ldd	r24, Y+3	; 0x03
 272:	88 23       	and	r24, r24
 274:	09 f0       	breq	.+2      	; 0x278 <DIO_voidSetPinDirection+0x108>
 276:	73 c0       	rjmp	.+230    	; 0x35e <DIO_voidSetPinDirection+0x1ee>
		switch(Copy_u8PortID){
 278:	89 81       	ldd	r24, Y+1	; 0x01
 27a:	28 2f       	mov	r18, r24
 27c:	30 e0       	ldi	r19, 0x00	; 0
 27e:	3d 83       	std	Y+5, r19	; 0x05
 280:	2c 83       	std	Y+4, r18	; 0x04
 282:	8c 81       	ldd	r24, Y+4	; 0x04
 284:	9d 81       	ldd	r25, Y+5	; 0x05
 286:	81 30       	cpi	r24, 0x01	; 1
 288:	91 05       	cpc	r25, r1
 28a:	59 f1       	breq	.+86     	; 0x2e2 <DIO_voidSetPinDirection+0x172>
 28c:	2c 81       	ldd	r18, Y+4	; 0x04
 28e:	3d 81       	ldd	r19, Y+5	; 0x05
 290:	22 30       	cpi	r18, 0x02	; 2
 292:	31 05       	cpc	r19, r1
 294:	2c f4       	brge	.+10     	; 0x2a0 <DIO_voidSetPinDirection+0x130>
 296:	8c 81       	ldd	r24, Y+4	; 0x04
 298:	9d 81       	ldd	r25, Y+5	; 0x05
 29a:	00 97       	sbiw	r24, 0x00	; 0
 29c:	69 f0       	breq	.+26     	; 0x2b8 <DIO_voidSetPinDirection+0x148>
 29e:	5f c0       	rjmp	.+190    	; 0x35e <DIO_voidSetPinDirection+0x1ee>
 2a0:	2c 81       	ldd	r18, Y+4	; 0x04
 2a2:	3d 81       	ldd	r19, Y+5	; 0x05
 2a4:	22 30       	cpi	r18, 0x02	; 2
 2a6:	31 05       	cpc	r19, r1
 2a8:	89 f1       	breq	.+98     	; 0x30c <DIO_voidSetPinDirection+0x19c>
 2aa:	8c 81       	ldd	r24, Y+4	; 0x04
 2ac:	9d 81       	ldd	r25, Y+5	; 0x05
 2ae:	83 30       	cpi	r24, 0x03	; 3
 2b0:	91 05       	cpc	r25, r1
 2b2:	09 f4       	brne	.+2      	; 0x2b6 <DIO_voidSetPinDirection+0x146>
 2b4:	40 c0       	rjmp	.+128    	; 0x336 <DIO_voidSetPinDirection+0x1c6>
 2b6:	53 c0       	rjmp	.+166    	; 0x35e <DIO_voidSetPinDirection+0x1ee>
			case PORTA/*Port A*/: CLR_BIT(DDRA_REG,Copy_u8PinID);break;
 2b8:	aa e3       	ldi	r26, 0x3A	; 58
 2ba:	b0 e0       	ldi	r27, 0x00	; 0
 2bc:	ea e3       	ldi	r30, 0x3A	; 58
 2be:	f0 e0       	ldi	r31, 0x00	; 0
 2c0:	80 81       	ld	r24, Z
 2c2:	48 2f       	mov	r20, r24
 2c4:	8a 81       	ldd	r24, Y+2	; 0x02
 2c6:	28 2f       	mov	r18, r24
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	02 2e       	mov	r0, r18
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <DIO_voidSetPinDirection+0x166>
 2d2:	88 0f       	add	r24, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	0a 94       	dec	r0
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <DIO_voidSetPinDirection+0x162>
 2da:	80 95       	com	r24
 2dc:	84 23       	and	r24, r20
 2de:	8c 93       	st	X, r24
 2e0:	3e c0       	rjmp	.+124    	; 0x35e <DIO_voidSetPinDirection+0x1ee>
			case PORTB/*Port B*/: CLR_BIT(DDRB_REG,Copy_u8PinID);break;
 2e2:	a7 e3       	ldi	r26, 0x37	; 55
 2e4:	b0 e0       	ldi	r27, 0x00	; 0
 2e6:	e7 e3       	ldi	r30, 0x37	; 55
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	80 81       	ld	r24, Z
 2ec:	48 2f       	mov	r20, r24
 2ee:	8a 81       	ldd	r24, Y+2	; 0x02
 2f0:	28 2f       	mov	r18, r24
 2f2:	30 e0       	ldi	r19, 0x00	; 0
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	02 2e       	mov	r0, r18
 2fa:	02 c0       	rjmp	.+4      	; 0x300 <DIO_voidSetPinDirection+0x190>
 2fc:	88 0f       	add	r24, r24
 2fe:	99 1f       	adc	r25, r25
 300:	0a 94       	dec	r0
 302:	e2 f7       	brpl	.-8      	; 0x2fc <DIO_voidSetPinDirection+0x18c>
 304:	80 95       	com	r24
 306:	84 23       	and	r24, r20
 308:	8c 93       	st	X, r24
 30a:	29 c0       	rjmp	.+82     	; 0x35e <DIO_voidSetPinDirection+0x1ee>
			case PORTC/*Port C*/: CLR_BIT(DDRC_REG,Copy_u8PinID);break;
 30c:	a4 e3       	ldi	r26, 0x34	; 52
 30e:	b0 e0       	ldi	r27, 0x00	; 0
 310:	e4 e3       	ldi	r30, 0x34	; 52
 312:	f0 e0       	ldi	r31, 0x00	; 0
 314:	80 81       	ld	r24, Z
 316:	48 2f       	mov	r20, r24
 318:	8a 81       	ldd	r24, Y+2	; 0x02
 31a:	28 2f       	mov	r18, r24
 31c:	30 e0       	ldi	r19, 0x00	; 0
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	02 2e       	mov	r0, r18
 324:	02 c0       	rjmp	.+4      	; 0x32a <DIO_voidSetPinDirection+0x1ba>
 326:	88 0f       	add	r24, r24
 328:	99 1f       	adc	r25, r25
 32a:	0a 94       	dec	r0
 32c:	e2 f7       	brpl	.-8      	; 0x326 <DIO_voidSetPinDirection+0x1b6>
 32e:	80 95       	com	r24
 330:	84 23       	and	r24, r20
 332:	8c 93       	st	X, r24
 334:	14 c0       	rjmp	.+40     	; 0x35e <DIO_voidSetPinDirection+0x1ee>
			case PORTD/*Port D*/: CLR_BIT(DDRD_REG,Copy_u8PinID);break;
 336:	a1 e3       	ldi	r26, 0x31	; 49
 338:	b0 e0       	ldi	r27, 0x00	; 0
 33a:	e1 e3       	ldi	r30, 0x31	; 49
 33c:	f0 e0       	ldi	r31, 0x00	; 0
 33e:	80 81       	ld	r24, Z
 340:	48 2f       	mov	r20, r24
 342:	8a 81       	ldd	r24, Y+2	; 0x02
 344:	28 2f       	mov	r18, r24
 346:	30 e0       	ldi	r19, 0x00	; 0
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	02 2e       	mov	r0, r18
 34e:	02 c0       	rjmp	.+4      	; 0x354 <DIO_voidSetPinDirection+0x1e4>
 350:	88 0f       	add	r24, r24
 352:	99 1f       	adc	r25, r25
 354:	0a 94       	dec	r0
 356:	e2 f7       	brpl	.-8      	; 0x350 <DIO_voidSetPinDirection+0x1e0>
 358:	80 95       	com	r24
 35a:	84 23       	and	r24, r20
 35c:	8c 93       	st	X, r24
		}
	}
}
 35e:	27 96       	adiw	r28, 0x07	; 7
 360:	0f b6       	in	r0, 0x3f	; 63
 362:	f8 94       	cli
 364:	de bf       	out	0x3e, r29	; 62
 366:	0f be       	out	0x3f, r0	; 63
 368:	cd bf       	out	0x3d, r28	; 61
 36a:	cf 91       	pop	r28
 36c:	df 91       	pop	r29
 36e:	08 95       	ret

00000370 <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8PinValue){
 370:	df 93       	push	r29
 372:	cf 93       	push	r28
 374:	cd b7       	in	r28, 0x3d	; 61
 376:	de b7       	in	r29, 0x3e	; 62
 378:	27 97       	sbiw	r28, 0x07	; 7
 37a:	0f b6       	in	r0, 0x3f	; 63
 37c:	f8 94       	cli
 37e:	de bf       	out	0x3e, r29	; 62
 380:	0f be       	out	0x3f, r0	; 63
 382:	cd bf       	out	0x3d, r28	; 61
 384:	89 83       	std	Y+1, r24	; 0x01
 386:	6a 83       	std	Y+2, r22	; 0x02
 388:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8PinValue==PIN_HIGH){      //high
 38a:	8b 81       	ldd	r24, Y+3	; 0x03
 38c:	81 30       	cpi	r24, 0x01	; 1
 38e:	09 f0       	breq	.+2      	; 0x392 <DIO_voidSetPinValue+0x22>
 390:	6f c0       	rjmp	.+222    	; 0x470 <DIO_voidSetPinValue+0x100>
		switch(Copy_u8PortID){
 392:	89 81       	ldd	r24, Y+1	; 0x01
 394:	28 2f       	mov	r18, r24
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	3f 83       	std	Y+7, r19	; 0x07
 39a:	2e 83       	std	Y+6, r18	; 0x06
 39c:	8e 81       	ldd	r24, Y+6	; 0x06
 39e:	9f 81       	ldd	r25, Y+7	; 0x07
 3a0:	81 30       	cpi	r24, 0x01	; 1
 3a2:	91 05       	cpc	r25, r1
 3a4:	49 f1       	breq	.+82     	; 0x3f8 <DIO_voidSetPinValue+0x88>
 3a6:	2e 81       	ldd	r18, Y+6	; 0x06
 3a8:	3f 81       	ldd	r19, Y+7	; 0x07
 3aa:	22 30       	cpi	r18, 0x02	; 2
 3ac:	31 05       	cpc	r19, r1
 3ae:	2c f4       	brge	.+10     	; 0x3ba <DIO_voidSetPinValue+0x4a>
 3b0:	8e 81       	ldd	r24, Y+6	; 0x06
 3b2:	9f 81       	ldd	r25, Y+7	; 0x07
 3b4:	00 97       	sbiw	r24, 0x00	; 0
 3b6:	61 f0       	breq	.+24     	; 0x3d0 <DIO_voidSetPinValue+0x60>
 3b8:	d2 c0       	rjmp	.+420    	; 0x55e <DIO_voidSetPinValue+0x1ee>
 3ba:	2e 81       	ldd	r18, Y+6	; 0x06
 3bc:	3f 81       	ldd	r19, Y+7	; 0x07
 3be:	22 30       	cpi	r18, 0x02	; 2
 3c0:	31 05       	cpc	r19, r1
 3c2:	71 f1       	breq	.+92     	; 0x420 <DIO_voidSetPinValue+0xb0>
 3c4:	8e 81       	ldd	r24, Y+6	; 0x06
 3c6:	9f 81       	ldd	r25, Y+7	; 0x07
 3c8:	83 30       	cpi	r24, 0x03	; 3
 3ca:	91 05       	cpc	r25, r1
 3cc:	e9 f1       	breq	.+122    	; 0x448 <DIO_voidSetPinValue+0xd8>
 3ce:	c7 c0       	rjmp	.+398    	; 0x55e <DIO_voidSetPinValue+0x1ee>
			case PORTA/*Port A*/: SET_BIT(PORTA_REG,Copy_u8PinID);break;
 3d0:	ab e3       	ldi	r26, 0x3B	; 59
 3d2:	b0 e0       	ldi	r27, 0x00	; 0
 3d4:	eb e3       	ldi	r30, 0x3B	; 59
 3d6:	f0 e0       	ldi	r31, 0x00	; 0
 3d8:	80 81       	ld	r24, Z
 3da:	48 2f       	mov	r20, r24
 3dc:	8a 81       	ldd	r24, Y+2	; 0x02
 3de:	28 2f       	mov	r18, r24
 3e0:	30 e0       	ldi	r19, 0x00	; 0
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	02 2e       	mov	r0, r18
 3e8:	02 c0       	rjmp	.+4      	; 0x3ee <DIO_voidSetPinValue+0x7e>
 3ea:	88 0f       	add	r24, r24
 3ec:	99 1f       	adc	r25, r25
 3ee:	0a 94       	dec	r0
 3f0:	e2 f7       	brpl	.-8      	; 0x3ea <DIO_voidSetPinValue+0x7a>
 3f2:	84 2b       	or	r24, r20
 3f4:	8c 93       	st	X, r24
 3f6:	b3 c0       	rjmp	.+358    	; 0x55e <DIO_voidSetPinValue+0x1ee>
			case PORTB/*Port B*/: SET_BIT(PORTB_REG,Copy_u8PinID);break;
 3f8:	a8 e3       	ldi	r26, 0x38	; 56
 3fa:	b0 e0       	ldi	r27, 0x00	; 0
 3fc:	e8 e3       	ldi	r30, 0x38	; 56
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	80 81       	ld	r24, Z
 402:	48 2f       	mov	r20, r24
 404:	8a 81       	ldd	r24, Y+2	; 0x02
 406:	28 2f       	mov	r18, r24
 408:	30 e0       	ldi	r19, 0x00	; 0
 40a:	81 e0       	ldi	r24, 0x01	; 1
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	02 2e       	mov	r0, r18
 410:	02 c0       	rjmp	.+4      	; 0x416 <DIO_voidSetPinValue+0xa6>
 412:	88 0f       	add	r24, r24
 414:	99 1f       	adc	r25, r25
 416:	0a 94       	dec	r0
 418:	e2 f7       	brpl	.-8      	; 0x412 <DIO_voidSetPinValue+0xa2>
 41a:	84 2b       	or	r24, r20
 41c:	8c 93       	st	X, r24
 41e:	9f c0       	rjmp	.+318    	; 0x55e <DIO_voidSetPinValue+0x1ee>
			case PORTC/*Port C*/: SET_BIT(PORTC_REG,Copy_u8PinID);break;
 420:	a5 e3       	ldi	r26, 0x35	; 53
 422:	b0 e0       	ldi	r27, 0x00	; 0
 424:	e5 e3       	ldi	r30, 0x35	; 53
 426:	f0 e0       	ldi	r31, 0x00	; 0
 428:	80 81       	ld	r24, Z
 42a:	48 2f       	mov	r20, r24
 42c:	8a 81       	ldd	r24, Y+2	; 0x02
 42e:	28 2f       	mov	r18, r24
 430:	30 e0       	ldi	r19, 0x00	; 0
 432:	81 e0       	ldi	r24, 0x01	; 1
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	02 2e       	mov	r0, r18
 438:	02 c0       	rjmp	.+4      	; 0x43e <DIO_voidSetPinValue+0xce>
 43a:	88 0f       	add	r24, r24
 43c:	99 1f       	adc	r25, r25
 43e:	0a 94       	dec	r0
 440:	e2 f7       	brpl	.-8      	; 0x43a <DIO_voidSetPinValue+0xca>
 442:	84 2b       	or	r24, r20
 444:	8c 93       	st	X, r24
 446:	8b c0       	rjmp	.+278    	; 0x55e <DIO_voidSetPinValue+0x1ee>
			case PORTD/*Port D*/: SET_BIT(PORTD_REG,Copy_u8PinID);break;
 448:	a2 e3       	ldi	r26, 0x32	; 50
 44a:	b0 e0       	ldi	r27, 0x00	; 0
 44c:	e2 e3       	ldi	r30, 0x32	; 50
 44e:	f0 e0       	ldi	r31, 0x00	; 0
 450:	80 81       	ld	r24, Z
 452:	48 2f       	mov	r20, r24
 454:	8a 81       	ldd	r24, Y+2	; 0x02
 456:	28 2f       	mov	r18, r24
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	81 e0       	ldi	r24, 0x01	; 1
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	02 2e       	mov	r0, r18
 460:	02 c0       	rjmp	.+4      	; 0x466 <DIO_voidSetPinValue+0xf6>
 462:	88 0f       	add	r24, r24
 464:	99 1f       	adc	r25, r25
 466:	0a 94       	dec	r0
 468:	e2 f7       	brpl	.-8      	; 0x462 <DIO_voidSetPinValue+0xf2>
 46a:	84 2b       	or	r24, r20
 46c:	8c 93       	st	X, r24
 46e:	77 c0       	rjmp	.+238    	; 0x55e <DIO_voidSetPinValue+0x1ee>
		}
	}
	else if(Copy_u8PinValue==PIN_LOW){  //low
 470:	8b 81       	ldd	r24, Y+3	; 0x03
 472:	88 23       	and	r24, r24
 474:	09 f0       	breq	.+2      	; 0x478 <DIO_voidSetPinValue+0x108>
 476:	73 c0       	rjmp	.+230    	; 0x55e <DIO_voidSetPinValue+0x1ee>
		switch(Copy_u8PortID){
 478:	89 81       	ldd	r24, Y+1	; 0x01
 47a:	28 2f       	mov	r18, r24
 47c:	30 e0       	ldi	r19, 0x00	; 0
 47e:	3d 83       	std	Y+5, r19	; 0x05
 480:	2c 83       	std	Y+4, r18	; 0x04
 482:	8c 81       	ldd	r24, Y+4	; 0x04
 484:	9d 81       	ldd	r25, Y+5	; 0x05
 486:	81 30       	cpi	r24, 0x01	; 1
 488:	91 05       	cpc	r25, r1
 48a:	59 f1       	breq	.+86     	; 0x4e2 <DIO_voidSetPinValue+0x172>
 48c:	2c 81       	ldd	r18, Y+4	; 0x04
 48e:	3d 81       	ldd	r19, Y+5	; 0x05
 490:	22 30       	cpi	r18, 0x02	; 2
 492:	31 05       	cpc	r19, r1
 494:	2c f4       	brge	.+10     	; 0x4a0 <DIO_voidSetPinValue+0x130>
 496:	8c 81       	ldd	r24, Y+4	; 0x04
 498:	9d 81       	ldd	r25, Y+5	; 0x05
 49a:	00 97       	sbiw	r24, 0x00	; 0
 49c:	69 f0       	breq	.+26     	; 0x4b8 <DIO_voidSetPinValue+0x148>
 49e:	5f c0       	rjmp	.+190    	; 0x55e <DIO_voidSetPinValue+0x1ee>
 4a0:	2c 81       	ldd	r18, Y+4	; 0x04
 4a2:	3d 81       	ldd	r19, Y+5	; 0x05
 4a4:	22 30       	cpi	r18, 0x02	; 2
 4a6:	31 05       	cpc	r19, r1
 4a8:	89 f1       	breq	.+98     	; 0x50c <DIO_voidSetPinValue+0x19c>
 4aa:	8c 81       	ldd	r24, Y+4	; 0x04
 4ac:	9d 81       	ldd	r25, Y+5	; 0x05
 4ae:	83 30       	cpi	r24, 0x03	; 3
 4b0:	91 05       	cpc	r25, r1
 4b2:	09 f4       	brne	.+2      	; 0x4b6 <DIO_voidSetPinValue+0x146>
 4b4:	40 c0       	rjmp	.+128    	; 0x536 <DIO_voidSetPinValue+0x1c6>
 4b6:	53 c0       	rjmp	.+166    	; 0x55e <DIO_voidSetPinValue+0x1ee>
			case PORTA/*Port A*/: CLR_BIT(PORTA_REG,Copy_u8PinID);break;
 4b8:	ab e3       	ldi	r26, 0x3B	; 59
 4ba:	b0 e0       	ldi	r27, 0x00	; 0
 4bc:	eb e3       	ldi	r30, 0x3B	; 59
 4be:	f0 e0       	ldi	r31, 0x00	; 0
 4c0:	80 81       	ld	r24, Z
 4c2:	48 2f       	mov	r20, r24
 4c4:	8a 81       	ldd	r24, Y+2	; 0x02
 4c6:	28 2f       	mov	r18, r24
 4c8:	30 e0       	ldi	r19, 0x00	; 0
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	02 2e       	mov	r0, r18
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <DIO_voidSetPinValue+0x166>
 4d2:	88 0f       	add	r24, r24
 4d4:	99 1f       	adc	r25, r25
 4d6:	0a 94       	dec	r0
 4d8:	e2 f7       	brpl	.-8      	; 0x4d2 <DIO_voidSetPinValue+0x162>
 4da:	80 95       	com	r24
 4dc:	84 23       	and	r24, r20
 4de:	8c 93       	st	X, r24
 4e0:	3e c0       	rjmp	.+124    	; 0x55e <DIO_voidSetPinValue+0x1ee>
			case PORTB/*Port B*/: CLR_BIT(PORTB_REG,Copy_u8PinID);break;
 4e2:	a8 e3       	ldi	r26, 0x38	; 56
 4e4:	b0 e0       	ldi	r27, 0x00	; 0
 4e6:	e8 e3       	ldi	r30, 0x38	; 56
 4e8:	f0 e0       	ldi	r31, 0x00	; 0
 4ea:	80 81       	ld	r24, Z
 4ec:	48 2f       	mov	r20, r24
 4ee:	8a 81       	ldd	r24, Y+2	; 0x02
 4f0:	28 2f       	mov	r18, r24
 4f2:	30 e0       	ldi	r19, 0x00	; 0
 4f4:	81 e0       	ldi	r24, 0x01	; 1
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	02 2e       	mov	r0, r18
 4fa:	02 c0       	rjmp	.+4      	; 0x500 <DIO_voidSetPinValue+0x190>
 4fc:	88 0f       	add	r24, r24
 4fe:	99 1f       	adc	r25, r25
 500:	0a 94       	dec	r0
 502:	e2 f7       	brpl	.-8      	; 0x4fc <DIO_voidSetPinValue+0x18c>
 504:	80 95       	com	r24
 506:	84 23       	and	r24, r20
 508:	8c 93       	st	X, r24
 50a:	29 c0       	rjmp	.+82     	; 0x55e <DIO_voidSetPinValue+0x1ee>
			case PORTC/*Port C*/: CLR_BIT(PORTC_REG,Copy_u8PinID);break;
 50c:	a5 e3       	ldi	r26, 0x35	; 53
 50e:	b0 e0       	ldi	r27, 0x00	; 0
 510:	e5 e3       	ldi	r30, 0x35	; 53
 512:	f0 e0       	ldi	r31, 0x00	; 0
 514:	80 81       	ld	r24, Z
 516:	48 2f       	mov	r20, r24
 518:	8a 81       	ldd	r24, Y+2	; 0x02
 51a:	28 2f       	mov	r18, r24
 51c:	30 e0       	ldi	r19, 0x00	; 0
 51e:	81 e0       	ldi	r24, 0x01	; 1
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	02 2e       	mov	r0, r18
 524:	02 c0       	rjmp	.+4      	; 0x52a <DIO_voidSetPinValue+0x1ba>
 526:	88 0f       	add	r24, r24
 528:	99 1f       	adc	r25, r25
 52a:	0a 94       	dec	r0
 52c:	e2 f7       	brpl	.-8      	; 0x526 <DIO_voidSetPinValue+0x1b6>
 52e:	80 95       	com	r24
 530:	84 23       	and	r24, r20
 532:	8c 93       	st	X, r24
 534:	14 c0       	rjmp	.+40     	; 0x55e <DIO_voidSetPinValue+0x1ee>
			case PORTD/*Port D*/: CLR_BIT(PORTD_REG,Copy_u8PinID);break;
 536:	a2 e3       	ldi	r26, 0x32	; 50
 538:	b0 e0       	ldi	r27, 0x00	; 0
 53a:	e2 e3       	ldi	r30, 0x32	; 50
 53c:	f0 e0       	ldi	r31, 0x00	; 0
 53e:	80 81       	ld	r24, Z
 540:	48 2f       	mov	r20, r24
 542:	8a 81       	ldd	r24, Y+2	; 0x02
 544:	28 2f       	mov	r18, r24
 546:	30 e0       	ldi	r19, 0x00	; 0
 548:	81 e0       	ldi	r24, 0x01	; 1
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	02 2e       	mov	r0, r18
 54e:	02 c0       	rjmp	.+4      	; 0x554 <DIO_voidSetPinValue+0x1e4>
 550:	88 0f       	add	r24, r24
 552:	99 1f       	adc	r25, r25
 554:	0a 94       	dec	r0
 556:	e2 f7       	brpl	.-8      	; 0x550 <DIO_voidSetPinValue+0x1e0>
 558:	80 95       	com	r24
 55a:	84 23       	and	r24, r20
 55c:	8c 93       	st	X, r24
		}
	}
}
 55e:	27 96       	adiw	r28, 0x07	; 7
 560:	0f b6       	in	r0, 0x3f	; 63
 562:	f8 94       	cli
 564:	de bf       	out	0x3e, r29	; 62
 566:	0f be       	out	0x3f, r0	; 63
 568:	cd bf       	out	0x3d, r28	; 61
 56a:	cf 91       	pop	r28
 56c:	df 91       	pop	r29
 56e:	08 95       	ret

00000570 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8PortID,u8 Copy_u8PinID){
 570:	df 93       	push	r29
 572:	cf 93       	push	r28
 574:	00 d0       	rcall	.+0      	; 0x576 <DIO_u8GetPinValue+0x6>
 576:	00 d0       	rcall	.+0      	; 0x578 <DIO_u8GetPinValue+0x8>
 578:	0f 92       	push	r0
 57a:	cd b7       	in	r28, 0x3d	; 61
 57c:	de b7       	in	r29, 0x3e	; 62
 57e:	8a 83       	std	Y+2, r24	; 0x02
 580:	6b 83       	std	Y+3, r22	; 0x03
	u8 value=0;
 582:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8PortID){
 584:	8a 81       	ldd	r24, Y+2	; 0x02
 586:	28 2f       	mov	r18, r24
 588:	30 e0       	ldi	r19, 0x00	; 0
 58a:	3d 83       	std	Y+5, r19	; 0x05
 58c:	2c 83       	std	Y+4, r18	; 0x04
 58e:	4c 81       	ldd	r20, Y+4	; 0x04
 590:	5d 81       	ldd	r21, Y+5	; 0x05
 592:	41 30       	cpi	r20, 0x01	; 1
 594:	51 05       	cpc	r21, r1
 596:	41 f1       	breq	.+80     	; 0x5e8 <DIO_u8GetPinValue+0x78>
 598:	8c 81       	ldd	r24, Y+4	; 0x04
 59a:	9d 81       	ldd	r25, Y+5	; 0x05
 59c:	82 30       	cpi	r24, 0x02	; 2
 59e:	91 05       	cpc	r25, r1
 5a0:	34 f4       	brge	.+12     	; 0x5ae <DIO_u8GetPinValue+0x3e>
 5a2:	2c 81       	ldd	r18, Y+4	; 0x04
 5a4:	3d 81       	ldd	r19, Y+5	; 0x05
 5a6:	21 15       	cp	r18, r1
 5a8:	31 05       	cpc	r19, r1
 5aa:	61 f0       	breq	.+24     	; 0x5c4 <DIO_u8GetPinValue+0x54>
 5ac:	52 c0       	rjmp	.+164    	; 0x652 <DIO_u8GetPinValue+0xe2>
 5ae:	4c 81       	ldd	r20, Y+4	; 0x04
 5b0:	5d 81       	ldd	r21, Y+5	; 0x05
 5b2:	42 30       	cpi	r20, 0x02	; 2
 5b4:	51 05       	cpc	r21, r1
 5b6:	51 f1       	breq	.+84     	; 0x60c <DIO_u8GetPinValue+0x9c>
 5b8:	8c 81       	ldd	r24, Y+4	; 0x04
 5ba:	9d 81       	ldd	r25, Y+5	; 0x05
 5bc:	83 30       	cpi	r24, 0x03	; 3
 5be:	91 05       	cpc	r25, r1
 5c0:	b9 f1       	breq	.+110    	; 0x630 <DIO_u8GetPinValue+0xc0>
 5c2:	47 c0       	rjmp	.+142    	; 0x652 <DIO_u8GetPinValue+0xe2>
		case PORTA/*Port A*/: value=GET_BIT(PINA_REG,Copy_u8PinID);break;
 5c4:	e9 e3       	ldi	r30, 0x39	; 57
 5c6:	f0 e0       	ldi	r31, 0x00	; 0
 5c8:	80 81       	ld	r24, Z
 5ca:	28 2f       	mov	r18, r24
 5cc:	30 e0       	ldi	r19, 0x00	; 0
 5ce:	8b 81       	ldd	r24, Y+3	; 0x03
 5d0:	88 2f       	mov	r24, r24
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	a9 01       	movw	r20, r18
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <DIO_u8GetPinValue+0x6c>
 5d8:	55 95       	asr	r21
 5da:	47 95       	ror	r20
 5dc:	8a 95       	dec	r24
 5de:	e2 f7       	brpl	.-8      	; 0x5d8 <DIO_u8GetPinValue+0x68>
 5e0:	ca 01       	movw	r24, r20
 5e2:	81 70       	andi	r24, 0x01	; 1
 5e4:	89 83       	std	Y+1, r24	; 0x01
 5e6:	35 c0       	rjmp	.+106    	; 0x652 <DIO_u8GetPinValue+0xe2>
		case PORTB/*Port B*/: value=GET_BIT(PINB_REG,Copy_u8PinID);break;
 5e8:	e6 e3       	ldi	r30, 0x36	; 54
 5ea:	f0 e0       	ldi	r31, 0x00	; 0
 5ec:	80 81       	ld	r24, Z
 5ee:	28 2f       	mov	r18, r24
 5f0:	30 e0       	ldi	r19, 0x00	; 0
 5f2:	8b 81       	ldd	r24, Y+3	; 0x03
 5f4:	88 2f       	mov	r24, r24
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	a9 01       	movw	r20, r18
 5fa:	02 c0       	rjmp	.+4      	; 0x600 <DIO_u8GetPinValue+0x90>
 5fc:	55 95       	asr	r21
 5fe:	47 95       	ror	r20
 600:	8a 95       	dec	r24
 602:	e2 f7       	brpl	.-8      	; 0x5fc <DIO_u8GetPinValue+0x8c>
 604:	ca 01       	movw	r24, r20
 606:	81 70       	andi	r24, 0x01	; 1
 608:	89 83       	std	Y+1, r24	; 0x01
 60a:	23 c0       	rjmp	.+70     	; 0x652 <DIO_u8GetPinValue+0xe2>
		case PORTC/*Port C*/: value=GET_BIT(PINC_REG,Copy_u8PinID);break;
 60c:	e3 e3       	ldi	r30, 0x33	; 51
 60e:	f0 e0       	ldi	r31, 0x00	; 0
 610:	80 81       	ld	r24, Z
 612:	28 2f       	mov	r18, r24
 614:	30 e0       	ldi	r19, 0x00	; 0
 616:	8b 81       	ldd	r24, Y+3	; 0x03
 618:	88 2f       	mov	r24, r24
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	a9 01       	movw	r20, r18
 61e:	02 c0       	rjmp	.+4      	; 0x624 <DIO_u8GetPinValue+0xb4>
 620:	55 95       	asr	r21
 622:	47 95       	ror	r20
 624:	8a 95       	dec	r24
 626:	e2 f7       	brpl	.-8      	; 0x620 <DIO_u8GetPinValue+0xb0>
 628:	ca 01       	movw	r24, r20
 62a:	81 70       	andi	r24, 0x01	; 1
 62c:	89 83       	std	Y+1, r24	; 0x01
 62e:	11 c0       	rjmp	.+34     	; 0x652 <DIO_u8GetPinValue+0xe2>
		case PORTD/*Port D*/: value=GET_BIT(PIND_REG,Copy_u8PinID);break;
 630:	e0 e3       	ldi	r30, 0x30	; 48
 632:	f0 e0       	ldi	r31, 0x00	; 0
 634:	80 81       	ld	r24, Z
 636:	28 2f       	mov	r18, r24
 638:	30 e0       	ldi	r19, 0x00	; 0
 63a:	8b 81       	ldd	r24, Y+3	; 0x03
 63c:	88 2f       	mov	r24, r24
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	a9 01       	movw	r20, r18
 642:	02 c0       	rjmp	.+4      	; 0x648 <DIO_u8GetPinValue+0xd8>
 644:	55 95       	asr	r21
 646:	47 95       	ror	r20
 648:	8a 95       	dec	r24
 64a:	e2 f7       	brpl	.-8      	; 0x644 <DIO_u8GetPinValue+0xd4>
 64c:	ca 01       	movw	r24, r20
 64e:	81 70       	andi	r24, 0x01	; 1
 650:	89 83       	std	Y+1, r24	; 0x01
	}
	return value;
 652:	89 81       	ldd	r24, Y+1	; 0x01
}
 654:	0f 90       	pop	r0
 656:	0f 90       	pop	r0
 658:	0f 90       	pop	r0
 65a:	0f 90       	pop	r0
 65c:	0f 90       	pop	r0
 65e:	cf 91       	pop	r28
 660:	df 91       	pop	r29
 662:	08 95       	ret

00000664 <DIO_voidTogglePinValue>:

void DIO_voidTogglePinValue(u8 Copy_u8PortID,u8 Copy_u8PinID){
 664:	df 93       	push	r29
 666:	cf 93       	push	r28
 668:	00 d0       	rcall	.+0      	; 0x66a <DIO_voidTogglePinValue+0x6>
 66a:	00 d0       	rcall	.+0      	; 0x66c <DIO_voidTogglePinValue+0x8>
 66c:	cd b7       	in	r28, 0x3d	; 61
 66e:	de b7       	in	r29, 0x3e	; 62
 670:	89 83       	std	Y+1, r24	; 0x01
 672:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortID){
 674:	89 81       	ldd	r24, Y+1	; 0x01
 676:	28 2f       	mov	r18, r24
 678:	30 e0       	ldi	r19, 0x00	; 0
 67a:	3c 83       	std	Y+4, r19	; 0x04
 67c:	2b 83       	std	Y+3, r18	; 0x03
 67e:	8b 81       	ldd	r24, Y+3	; 0x03
 680:	9c 81       	ldd	r25, Y+4	; 0x04
 682:	81 30       	cpi	r24, 0x01	; 1
 684:	91 05       	cpc	r25, r1
 686:	49 f1       	breq	.+82     	; 0x6da <DIO_voidTogglePinValue+0x76>
 688:	2b 81       	ldd	r18, Y+3	; 0x03
 68a:	3c 81       	ldd	r19, Y+4	; 0x04
 68c:	22 30       	cpi	r18, 0x02	; 2
 68e:	31 05       	cpc	r19, r1
 690:	2c f4       	brge	.+10     	; 0x69c <DIO_voidTogglePinValue+0x38>
 692:	8b 81       	ldd	r24, Y+3	; 0x03
 694:	9c 81       	ldd	r25, Y+4	; 0x04
 696:	00 97       	sbiw	r24, 0x00	; 0
 698:	61 f0       	breq	.+24     	; 0x6b2 <DIO_voidTogglePinValue+0x4e>
 69a:	5a c0       	rjmp	.+180    	; 0x750 <DIO_voidTogglePinValue+0xec>
 69c:	2b 81       	ldd	r18, Y+3	; 0x03
 69e:	3c 81       	ldd	r19, Y+4	; 0x04
 6a0:	22 30       	cpi	r18, 0x02	; 2
 6a2:	31 05       	cpc	r19, r1
 6a4:	71 f1       	breq	.+92     	; 0x702 <DIO_voidTogglePinValue+0x9e>
 6a6:	8b 81       	ldd	r24, Y+3	; 0x03
 6a8:	9c 81       	ldd	r25, Y+4	; 0x04
 6aa:	83 30       	cpi	r24, 0x03	; 3
 6ac:	91 05       	cpc	r25, r1
 6ae:	e9 f1       	breq	.+122    	; 0x72a <DIO_voidTogglePinValue+0xc6>
 6b0:	4f c0       	rjmp	.+158    	; 0x750 <DIO_voidTogglePinValue+0xec>
		case PORTA/*Port A*/: TOG_BIT(PORTA_REG,Copy_u8PinID);break;
 6b2:	ab e3       	ldi	r26, 0x3B	; 59
 6b4:	b0 e0       	ldi	r27, 0x00	; 0
 6b6:	eb e3       	ldi	r30, 0x3B	; 59
 6b8:	f0 e0       	ldi	r31, 0x00	; 0
 6ba:	80 81       	ld	r24, Z
 6bc:	48 2f       	mov	r20, r24
 6be:	8a 81       	ldd	r24, Y+2	; 0x02
 6c0:	28 2f       	mov	r18, r24
 6c2:	30 e0       	ldi	r19, 0x00	; 0
 6c4:	81 e0       	ldi	r24, 0x01	; 1
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	02 2e       	mov	r0, r18
 6ca:	02 c0       	rjmp	.+4      	; 0x6d0 <DIO_voidTogglePinValue+0x6c>
 6cc:	88 0f       	add	r24, r24
 6ce:	99 1f       	adc	r25, r25
 6d0:	0a 94       	dec	r0
 6d2:	e2 f7       	brpl	.-8      	; 0x6cc <DIO_voidTogglePinValue+0x68>
 6d4:	84 27       	eor	r24, r20
 6d6:	8c 93       	st	X, r24
 6d8:	3b c0       	rjmp	.+118    	; 0x750 <DIO_voidTogglePinValue+0xec>
		case PORTB/*Port B*/: TOG_BIT(PORTB_REG,Copy_u8PinID);break;
 6da:	a8 e3       	ldi	r26, 0x38	; 56
 6dc:	b0 e0       	ldi	r27, 0x00	; 0
 6de:	e8 e3       	ldi	r30, 0x38	; 56
 6e0:	f0 e0       	ldi	r31, 0x00	; 0
 6e2:	80 81       	ld	r24, Z
 6e4:	48 2f       	mov	r20, r24
 6e6:	8a 81       	ldd	r24, Y+2	; 0x02
 6e8:	28 2f       	mov	r18, r24
 6ea:	30 e0       	ldi	r19, 0x00	; 0
 6ec:	81 e0       	ldi	r24, 0x01	; 1
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	02 2e       	mov	r0, r18
 6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <DIO_voidTogglePinValue+0x94>
 6f4:	88 0f       	add	r24, r24
 6f6:	99 1f       	adc	r25, r25
 6f8:	0a 94       	dec	r0
 6fa:	e2 f7       	brpl	.-8      	; 0x6f4 <DIO_voidTogglePinValue+0x90>
 6fc:	84 27       	eor	r24, r20
 6fe:	8c 93       	st	X, r24
 700:	27 c0       	rjmp	.+78     	; 0x750 <DIO_voidTogglePinValue+0xec>
		case PORTC/*Port C*/: TOG_BIT(PORTC_REG,Copy_u8PinID);break;
 702:	a5 e3       	ldi	r26, 0x35	; 53
 704:	b0 e0       	ldi	r27, 0x00	; 0
 706:	e5 e3       	ldi	r30, 0x35	; 53
 708:	f0 e0       	ldi	r31, 0x00	; 0
 70a:	80 81       	ld	r24, Z
 70c:	48 2f       	mov	r20, r24
 70e:	8a 81       	ldd	r24, Y+2	; 0x02
 710:	28 2f       	mov	r18, r24
 712:	30 e0       	ldi	r19, 0x00	; 0
 714:	81 e0       	ldi	r24, 0x01	; 1
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	02 2e       	mov	r0, r18
 71a:	02 c0       	rjmp	.+4      	; 0x720 <DIO_voidTogglePinValue+0xbc>
 71c:	88 0f       	add	r24, r24
 71e:	99 1f       	adc	r25, r25
 720:	0a 94       	dec	r0
 722:	e2 f7       	brpl	.-8      	; 0x71c <DIO_voidTogglePinValue+0xb8>
 724:	84 27       	eor	r24, r20
 726:	8c 93       	st	X, r24
 728:	13 c0       	rjmp	.+38     	; 0x750 <DIO_voidTogglePinValue+0xec>
		case PORTD/*Port D*/: TOG_BIT(PORTD_REG,Copy_u8PinID);break;
 72a:	a2 e3       	ldi	r26, 0x32	; 50
 72c:	b0 e0       	ldi	r27, 0x00	; 0
 72e:	e2 e3       	ldi	r30, 0x32	; 50
 730:	f0 e0       	ldi	r31, 0x00	; 0
 732:	80 81       	ld	r24, Z
 734:	48 2f       	mov	r20, r24
 736:	8a 81       	ldd	r24, Y+2	; 0x02
 738:	28 2f       	mov	r18, r24
 73a:	30 e0       	ldi	r19, 0x00	; 0
 73c:	81 e0       	ldi	r24, 0x01	; 1
 73e:	90 e0       	ldi	r25, 0x00	; 0
 740:	02 2e       	mov	r0, r18
 742:	02 c0       	rjmp	.+4      	; 0x748 <DIO_voidTogglePinValue+0xe4>
 744:	88 0f       	add	r24, r24
 746:	99 1f       	adc	r25, r25
 748:	0a 94       	dec	r0
 74a:	e2 f7       	brpl	.-8      	; 0x744 <DIO_voidTogglePinValue+0xe0>
 74c:	84 27       	eor	r24, r20
 74e:	8c 93       	st	X, r24
	}
}
 750:	0f 90       	pop	r0
 752:	0f 90       	pop	r0
 754:	0f 90       	pop	r0
 756:	0f 90       	pop	r0
 758:	cf 91       	pop	r28
 75a:	df 91       	pop	r29
 75c:	08 95       	ret

0000075e <SEVSEG_voidInitialize>:
#include "../../MCAL/DIO/DIO_interface.h"
#include "SEVSEG_private.h"
#include "SEVSEG_config.h"
#include "SEVSEG_interface.h"

void SEVSEG_voidInitialize(){
 75e:	df 93       	push	r29
 760:	cf 93       	push	r28
 762:	cd b7       	in	r28, 0x3d	; 61
 764:	de b7       	in	r29, 0x3e	; 62
	DIO_voidSetPinDirection(SEVSEG_PORT,SEVSEG_PIN_A,PIN_OUTPUT);
 766:	81 e0       	ldi	r24, 0x01	; 1
 768:	60 e0       	ldi	r22, 0x00	; 0
 76a:	41 e0       	ldi	r20, 0x01	; 1
 76c:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(SEVSEG_PORT,SEVSEG_PIN_B,PIN_OUTPUT);
 770:	81 e0       	ldi	r24, 0x01	; 1
 772:	61 e0       	ldi	r22, 0x01	; 1
 774:	41 e0       	ldi	r20, 0x01	; 1
 776:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(SEVSEG_PORT,SEVSEG_PIN_C,PIN_OUTPUT);
 77a:	81 e0       	ldi	r24, 0x01	; 1
 77c:	62 e0       	ldi	r22, 0x02	; 2
 77e:	41 e0       	ldi	r20, 0x01	; 1
 780:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(SEVSEG_PORT,SEVSEG_PIN_D,PIN_OUTPUT);
 784:	81 e0       	ldi	r24, 0x01	; 1
 786:	64 e0       	ldi	r22, 0x04	; 4
 788:	41 e0       	ldi	r20, 0x01	; 1
 78a:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_voidSetPinDirection>

	DIO_voidSetPinDirection(SEVSEG_1_EN_PORT,SEVSEG_1_EN_PIN,PIN_OUTPUT);
 78e:	81 e0       	ldi	r24, 0x01	; 1
 790:	66 e0       	ldi	r22, 0x06	; 6
 792:	41 e0       	ldi	r20, 0x01	; 1
 794:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(SEVSEG_2_EN_PORT,SEVSEG_2_EN_PIN,PIN_OUTPUT);
 798:	81 e0       	ldi	r24, 0x01	; 1
 79a:	65 e0       	ldi	r22, 0x05	; 5
 79c:	41 e0       	ldi	r20, 0x01	; 1
 79e:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(SEVSEG_3_EN_PORT,SEVSEG_3_EN_PIN,PIN_OUTPUT);
 7a2:	80 e0       	ldi	r24, 0x00	; 0
 7a4:	62 e0       	ldi	r22, 0x02	; 2
 7a6:	41 e0       	ldi	r20, 0x01	; 1
 7a8:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(SEVSEG_4_EN_PORT,SEVSEG_4_EN_PIN,PIN_OUTPUT);
 7ac:	80 e0       	ldi	r24, 0x00	; 0
 7ae:	63 e0       	ldi	r22, 0x03	; 3
 7b0:	41 e0       	ldi	r20, 0x01	; 1
 7b2:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_voidSetPinDirection>

	DIO_voidSetPinValue(SEVSEG_1_EN_PORT,SEVSEG_1_EN_PIN,PIN_HIGH);
 7b6:	81 e0       	ldi	r24, 0x01	; 1
 7b8:	66 e0       	ldi	r22, 0x06	; 6
 7ba:	41 e0       	ldi	r20, 0x01	; 1
 7bc:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(SEVSEG_2_EN_PORT,SEVSEG_2_EN_PIN,PIN_HIGH);
 7c0:	81 e0       	ldi	r24, 0x01	; 1
 7c2:	65 e0       	ldi	r22, 0x05	; 5
 7c4:	41 e0       	ldi	r20, 0x01	; 1
 7c6:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(SEVSEG_3_EN_PORT,SEVSEG_3_EN_PIN,PIN_HIGH);
 7ca:	80 e0       	ldi	r24, 0x00	; 0
 7cc:	62 e0       	ldi	r22, 0x02	; 2
 7ce:	41 e0       	ldi	r20, 0x01	; 1
 7d0:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(SEVSEG_4_EN_PORT,SEVSEG_4_EN_PIN,PIN_HIGH);
 7d4:	80 e0       	ldi	r24, 0x00	; 0
 7d6:	63 e0       	ldi	r22, 0x03	; 3
 7d8:	41 e0       	ldi	r20, 0x01	; 1
 7da:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
}
 7de:	cf 91       	pop	r28
 7e0:	df 91       	pop	r29
 7e2:	08 95       	ret

000007e4 <SEVSEG_voidEnableSegment>:

void SEVSEG_voidEnableSegment(u8 Copy_u8SegmentNum){
 7e4:	df 93       	push	r29
 7e6:	cf 93       	push	r28
 7e8:	00 d0       	rcall	.+0      	; 0x7ea <SEVSEG_voidEnableSegment+0x6>
 7ea:	0f 92       	push	r0
 7ec:	cd b7       	in	r28, 0x3d	; 61
 7ee:	de b7       	in	r29, 0x3e	; 62
 7f0:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8SegmentNum){
 7f2:	89 81       	ldd	r24, Y+1	; 0x01
 7f4:	28 2f       	mov	r18, r24
 7f6:	30 e0       	ldi	r19, 0x00	; 0
 7f8:	3b 83       	std	Y+3, r19	; 0x03
 7fa:	2a 83       	std	Y+2, r18	; 0x02
 7fc:	8a 81       	ldd	r24, Y+2	; 0x02
 7fe:	9b 81       	ldd	r25, Y+3	; 0x03
 800:	82 30       	cpi	r24, 0x02	; 2
 802:	91 05       	cpc	r25, r1
 804:	e1 f0       	breq	.+56     	; 0x83e <SEVSEG_voidEnableSegment+0x5a>
 806:	2a 81       	ldd	r18, Y+2	; 0x02
 808:	3b 81       	ldd	r19, Y+3	; 0x03
 80a:	23 30       	cpi	r18, 0x03	; 3
 80c:	31 05       	cpc	r19, r1
 80e:	34 f4       	brge	.+12     	; 0x81c <SEVSEG_voidEnableSegment+0x38>
 810:	8a 81       	ldd	r24, Y+2	; 0x02
 812:	9b 81       	ldd	r25, Y+3	; 0x03
 814:	81 30       	cpi	r24, 0x01	; 1
 816:	91 05       	cpc	r25, r1
 818:	61 f0       	breq	.+24     	; 0x832 <SEVSEG_voidEnableSegment+0x4e>
 81a:	22 c0       	rjmp	.+68     	; 0x860 <__stack+0x1>
 81c:	2a 81       	ldd	r18, Y+2	; 0x02
 81e:	3b 81       	ldd	r19, Y+3	; 0x03
 820:	23 30       	cpi	r18, 0x03	; 3
 822:	31 05       	cpc	r19, r1
 824:	91 f0       	breq	.+36     	; 0x84a <SEVSEG_voidEnableSegment+0x66>
 826:	8a 81       	ldd	r24, Y+2	; 0x02
 828:	9b 81       	ldd	r25, Y+3	; 0x03
 82a:	84 30       	cpi	r24, 0x04	; 4
 82c:	91 05       	cpc	r25, r1
 82e:	99 f0       	breq	.+38     	; 0x856 <SEVSEG_voidEnableSegment+0x72>
 830:	17 c0       	rjmp	.+46     	; 0x860 <__stack+0x1>
	case SEVSEG_1:
		DIO_voidSetPinValue(SEVSEG_1_EN_PORT,SEVSEG_1_EN_PIN,PIN_LOW);
 832:	81 e0       	ldi	r24, 0x01	; 1
 834:	66 e0       	ldi	r22, 0x06	; 6
 836:	40 e0       	ldi	r20, 0x00	; 0
 838:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
 83c:	11 c0       	rjmp	.+34     	; 0x860 <__stack+0x1>
		break;
	case SEVSEG_2:
		DIO_voidSetPinValue(SEVSEG_2_EN_PORT,SEVSEG_2_EN_PIN,PIN_LOW);
 83e:	81 e0       	ldi	r24, 0x01	; 1
 840:	65 e0       	ldi	r22, 0x05	; 5
 842:	40 e0       	ldi	r20, 0x00	; 0
 844:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
 848:	0b c0       	rjmp	.+22     	; 0x860 <__stack+0x1>
		break;
	case SEVSEG_3:
		DIO_voidSetPinValue(SEVSEG_3_EN_PORT,SEVSEG_3_EN_PIN,PIN_LOW);
 84a:	80 e0       	ldi	r24, 0x00	; 0
 84c:	62 e0       	ldi	r22, 0x02	; 2
 84e:	40 e0       	ldi	r20, 0x00	; 0
 850:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
 854:	05 c0       	rjmp	.+10     	; 0x860 <__stack+0x1>
		break;
	case SEVSEG_4:
		DIO_voidSetPinValue(SEVSEG_4_EN_PORT,SEVSEG_4_EN_PIN,PIN_LOW);
 856:	80 e0       	ldi	r24, 0x00	; 0
 858:	63 e0       	ldi	r22, 0x03	; 3
 85a:	40 e0       	ldi	r20, 0x00	; 0
 85c:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
		break;
	}

}
 860:	0f 90       	pop	r0
 862:	0f 90       	pop	r0
 864:	0f 90       	pop	r0
 866:	cf 91       	pop	r28
 868:	df 91       	pop	r29
 86a:	08 95       	ret

0000086c <SEVSEG_voidDisableSegment>:

void SEVSEG_voidDisableSegment(u8 Copy_u8SegmentNum){
 86c:	df 93       	push	r29
 86e:	cf 93       	push	r28
 870:	00 d0       	rcall	.+0      	; 0x872 <SEVSEG_voidDisableSegment+0x6>
 872:	0f 92       	push	r0
 874:	cd b7       	in	r28, 0x3d	; 61
 876:	de b7       	in	r29, 0x3e	; 62
 878:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8SegmentNum){
 87a:	89 81       	ldd	r24, Y+1	; 0x01
 87c:	28 2f       	mov	r18, r24
 87e:	30 e0       	ldi	r19, 0x00	; 0
 880:	3b 83       	std	Y+3, r19	; 0x03
 882:	2a 83       	std	Y+2, r18	; 0x02
 884:	8a 81       	ldd	r24, Y+2	; 0x02
 886:	9b 81       	ldd	r25, Y+3	; 0x03
 888:	82 30       	cpi	r24, 0x02	; 2
 88a:	91 05       	cpc	r25, r1
 88c:	e1 f0       	breq	.+56     	; 0x8c6 <SEVSEG_voidDisableSegment+0x5a>
 88e:	2a 81       	ldd	r18, Y+2	; 0x02
 890:	3b 81       	ldd	r19, Y+3	; 0x03
 892:	23 30       	cpi	r18, 0x03	; 3
 894:	31 05       	cpc	r19, r1
 896:	34 f4       	brge	.+12     	; 0x8a4 <SEVSEG_voidDisableSegment+0x38>
 898:	8a 81       	ldd	r24, Y+2	; 0x02
 89a:	9b 81       	ldd	r25, Y+3	; 0x03
 89c:	81 30       	cpi	r24, 0x01	; 1
 89e:	91 05       	cpc	r25, r1
 8a0:	61 f0       	breq	.+24     	; 0x8ba <SEVSEG_voidDisableSegment+0x4e>
 8a2:	22 c0       	rjmp	.+68     	; 0x8e8 <SEVSEG_voidDisableSegment+0x7c>
 8a4:	2a 81       	ldd	r18, Y+2	; 0x02
 8a6:	3b 81       	ldd	r19, Y+3	; 0x03
 8a8:	23 30       	cpi	r18, 0x03	; 3
 8aa:	31 05       	cpc	r19, r1
 8ac:	91 f0       	breq	.+36     	; 0x8d2 <SEVSEG_voidDisableSegment+0x66>
 8ae:	8a 81       	ldd	r24, Y+2	; 0x02
 8b0:	9b 81       	ldd	r25, Y+3	; 0x03
 8b2:	84 30       	cpi	r24, 0x04	; 4
 8b4:	91 05       	cpc	r25, r1
 8b6:	99 f0       	breq	.+38     	; 0x8de <SEVSEG_voidDisableSegment+0x72>
 8b8:	17 c0       	rjmp	.+46     	; 0x8e8 <SEVSEG_voidDisableSegment+0x7c>
	case SEVSEG_1:
		DIO_voidSetPinValue(SEVSEG_1_EN_PORT,SEVSEG_1_EN_PIN,PIN_HIGH);
 8ba:	81 e0       	ldi	r24, 0x01	; 1
 8bc:	66 e0       	ldi	r22, 0x06	; 6
 8be:	41 e0       	ldi	r20, 0x01	; 1
 8c0:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
 8c4:	11 c0       	rjmp	.+34     	; 0x8e8 <SEVSEG_voidDisableSegment+0x7c>
		break;
	case SEVSEG_2:
		DIO_voidSetPinValue(SEVSEG_2_EN_PORT,SEVSEG_2_EN_PIN,PIN_HIGH);
 8c6:	81 e0       	ldi	r24, 0x01	; 1
 8c8:	65 e0       	ldi	r22, 0x05	; 5
 8ca:	41 e0       	ldi	r20, 0x01	; 1
 8cc:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
 8d0:	0b c0       	rjmp	.+22     	; 0x8e8 <SEVSEG_voidDisableSegment+0x7c>
		break;
	case SEVSEG_3:
		DIO_voidSetPinValue(SEVSEG_3_EN_PORT,SEVSEG_3_EN_PIN,PIN_HIGH);
 8d2:	80 e0       	ldi	r24, 0x00	; 0
 8d4:	62 e0       	ldi	r22, 0x02	; 2
 8d6:	41 e0       	ldi	r20, 0x01	; 1
 8d8:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
 8dc:	05 c0       	rjmp	.+10     	; 0x8e8 <SEVSEG_voidDisableSegment+0x7c>
		break;
	case SEVSEG_4:
		DIO_voidSetPinValue(SEVSEG_4_EN_PORT,SEVSEG_4_EN_PIN,PIN_HIGH);
 8de:	80 e0       	ldi	r24, 0x00	; 0
 8e0:	63 e0       	ldi	r22, 0x03	; 3
 8e2:	41 e0       	ldi	r20, 0x01	; 1
 8e4:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
		break;
	}

}
 8e8:	0f 90       	pop	r0
 8ea:	0f 90       	pop	r0
 8ec:	0f 90       	pop	r0
 8ee:	cf 91       	pop	r28
 8f0:	df 91       	pop	r29
 8f2:	08 95       	ret

000008f4 <SEVSEG_voidWriteNumber>:

void SEVSEG_voidWriteNumber(u8 Copy_u8Number){
 8f4:	df 93       	push	r29
 8f6:	cf 93       	push	r28
 8f8:	0f 92       	push	r0
 8fa:	cd b7       	in	r28, 0x3d	; 61
 8fc:	de b7       	in	r29, 0x3e	; 62
 8fe:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinValue(SEVSEG_PORT,SEVSEG_PIN_A,GET_BIT(Copy_u8Number,0));
 900:	89 81       	ldd	r24, Y+1	; 0x01
 902:	98 2f       	mov	r25, r24
 904:	91 70       	andi	r25, 0x01	; 1
 906:	81 e0       	ldi	r24, 0x01	; 1
 908:	60 e0       	ldi	r22, 0x00	; 0
 90a:	49 2f       	mov	r20, r25
 90c:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(SEVSEG_PORT,SEVSEG_PIN_B,GET_BIT(Copy_u8Number,1));
 910:	89 81       	ldd	r24, Y+1	; 0x01
 912:	86 95       	lsr	r24
 914:	98 2f       	mov	r25, r24
 916:	91 70       	andi	r25, 0x01	; 1
 918:	81 e0       	ldi	r24, 0x01	; 1
 91a:	61 e0       	ldi	r22, 0x01	; 1
 91c:	49 2f       	mov	r20, r25
 91e:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(SEVSEG_PORT,SEVSEG_PIN_C,GET_BIT(Copy_u8Number,2));
 922:	89 81       	ldd	r24, Y+1	; 0x01
 924:	86 95       	lsr	r24
 926:	86 95       	lsr	r24
 928:	98 2f       	mov	r25, r24
 92a:	91 70       	andi	r25, 0x01	; 1
 92c:	81 e0       	ldi	r24, 0x01	; 1
 92e:	62 e0       	ldi	r22, 0x02	; 2
 930:	49 2f       	mov	r20, r25
 932:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(SEVSEG_PORT,SEVSEG_PIN_D,GET_BIT(Copy_u8Number,3));
 936:	89 81       	ldd	r24, Y+1	; 0x01
 938:	86 95       	lsr	r24
 93a:	86 95       	lsr	r24
 93c:	86 95       	lsr	r24
 93e:	98 2f       	mov	r25, r24
 940:	91 70       	andi	r25, 0x01	; 1
 942:	81 e0       	ldi	r24, 0x01	; 1
 944:	64 e0       	ldi	r22, 0x04	; 4
 946:	49 2f       	mov	r20, r25
 948:	0e 94 b8 01 	call	0x370	; 0x370 <DIO_voidSetPinValue>
}
 94c:	0f 90       	pop	r0
 94e:	cf 91       	pop	r28
 950:	df 91       	pop	r29
 952:	08 95       	ret

00000954 <delay>:
#include "COTS/LIB/Bit_Math.h"
#include "COTS/LIB/STD_Types.h"
#include "COTS/MCAL/DIO/DIO_interface.h"
#include "COTS/HAL/SevenSegment/SEVSEG_interface.h"

void delay(void){
 954:	df 93       	push	r29
 956:	cf 93       	push	r28
 958:	cd b7       	in	r28, 0x3d	; 61
 95a:	de b7       	in	r29, 0x3e	; 62
 95c:	e8 97       	sbiw	r28, 0x38	; 56
 95e:	0f b6       	in	r0, 0x3f	; 63
 960:	f8 94       	cli
 962:	de bf       	out	0x3e, r29	; 62
 964:	0f be       	out	0x3f, r0	; 63
 966:	cd bf       	out	0x3d, r28	; 61

	u64 wait;
	for(u32 i=0;i<10000;i++){
 968:	19 82       	std	Y+1, r1	; 0x01
 96a:	1a 82       	std	Y+2, r1	; 0x02
 96c:	1b 82       	std	Y+3, r1	; 0x03
 96e:	1c 82       	std	Y+4, r1	; 0x04
 970:	0f c1       	rjmp	.+542    	; 0xb90 <delay+0x23c>
		wait=0;
 972:	1d 82       	std	Y+5, r1	; 0x05
 974:	1e 82       	std	Y+6, r1	; 0x06
 976:	1f 82       	std	Y+7, r1	; 0x07
 978:	18 86       	std	Y+8, r1	; 0x08
 97a:	19 86       	std	Y+9, r1	; 0x09
 97c:	1a 86       	std	Y+10, r1	; 0x0a
 97e:	1b 86       	std	Y+11, r1	; 0x0b
 980:	1c 86       	std	Y+12, r1	; 0x0c
		while(wait++);
 982:	1d 86       	std	Y+13, r1	; 0x0d
 984:	8d 81       	ldd	r24, Y+5	; 0x05
 986:	9e 81       	ldd	r25, Y+6	; 0x06
 988:	89 2b       	or	r24, r25
 98a:	9f 81       	ldd	r25, Y+7	; 0x07
 98c:	89 2b       	or	r24, r25
 98e:	98 85       	ldd	r25, Y+8	; 0x08
 990:	89 2b       	or	r24, r25
 992:	99 85       	ldd	r25, Y+9	; 0x09
 994:	89 2b       	or	r24, r25
 996:	9a 85       	ldd	r25, Y+10	; 0x0a
 998:	89 2b       	or	r24, r25
 99a:	9b 85       	ldd	r25, Y+11	; 0x0b
 99c:	89 2b       	or	r24, r25
 99e:	9c 85       	ldd	r25, Y+12	; 0x0c
 9a0:	89 2b       	or	r24, r25
 9a2:	88 23       	and	r24, r24
 9a4:	11 f0       	breq	.+4      	; 0x9aa <delay+0x56>
 9a6:	21 e0       	ldi	r18, 0x01	; 1
 9a8:	2d 87       	std	Y+13, r18	; 0x0d
 9aa:	8d 81       	ldd	r24, Y+5	; 0x05
 9ac:	8e 87       	std	Y+14, r24	; 0x0e
 9ae:	9e 81       	ldd	r25, Y+6	; 0x06
 9b0:	9f 87       	std	Y+15, r25	; 0x0f
 9b2:	2f 81       	ldd	r18, Y+7	; 0x07
 9b4:	28 8b       	std	Y+16, r18	; 0x10
 9b6:	88 85       	ldd	r24, Y+8	; 0x08
 9b8:	89 8b       	std	Y+17, r24	; 0x11
 9ba:	99 85       	ldd	r25, Y+9	; 0x09
 9bc:	9a 8b       	std	Y+18, r25	; 0x12
 9be:	2a 85       	ldd	r18, Y+10	; 0x0a
 9c0:	2b 8b       	std	Y+19, r18	; 0x13
 9c2:	8b 85       	ldd	r24, Y+11	; 0x0b
 9c4:	8c 8b       	std	Y+20, r24	; 0x14
 9c6:	9c 85       	ldd	r25, Y+12	; 0x0c
 9c8:	9d 8b       	std	Y+21, r25	; 0x15
 9ca:	21 e0       	ldi	r18, 0x01	; 1
 9cc:	2e 8b       	std	Y+22, r18	; 0x16
 9ce:	1f 8a       	std	Y+23, r1	; 0x17
 9d0:	18 8e       	std	Y+24, r1	; 0x18
 9d2:	19 8e       	std	Y+25, r1	; 0x19
 9d4:	1a 8e       	std	Y+26, r1	; 0x1a
 9d6:	1b 8e       	std	Y+27, r1	; 0x1b
 9d8:	1c 8e       	std	Y+28, r1	; 0x1c
 9da:	1d 8e       	std	Y+29, r1	; 0x1d
 9dc:	8e 85       	ldd	r24, Y+14	; 0x0e
 9de:	9e 89       	ldd	r25, Y+22	; 0x16
 9e0:	89 0f       	add	r24, r25
 9e2:	8e 8f       	std	Y+30, r24	; 0x1e
 9e4:	21 e0       	ldi	r18, 0x01	; 1
 9e6:	2e a3       	std	Y+38, r18	; 0x26
 9e8:	8e 8d       	ldd	r24, Y+30	; 0x1e
 9ea:	9e 85       	ldd	r25, Y+14	; 0x0e
 9ec:	89 17       	cp	r24, r25
 9ee:	08 f0       	brcs	.+2      	; 0x9f2 <delay+0x9e>
 9f0:	1e a2       	std	Y+38, r1	; 0x26
 9f2:	2f 85       	ldd	r18, Y+15	; 0x0f
 9f4:	8f 89       	ldd	r24, Y+23	; 0x17
 9f6:	28 0f       	add	r18, r24
 9f8:	2f 8f       	std	Y+31, r18	; 0x1f
 9fa:	91 e0       	ldi	r25, 0x01	; 1
 9fc:	9f a3       	std	Y+39, r25	; 0x27
 9fe:	2f 8d       	ldd	r18, Y+31	; 0x1f
 a00:	8f 85       	ldd	r24, Y+15	; 0x0f
 a02:	28 17       	cp	r18, r24
 a04:	08 f0       	brcs	.+2      	; 0xa08 <delay+0xb4>
 a06:	1f a2       	std	Y+39, r1	; 0x27
 a08:	9e a1       	ldd	r25, Y+38	; 0x26
 a0a:	2f 8d       	ldd	r18, Y+31	; 0x1f
 a0c:	92 0f       	add	r25, r18
 a0e:	98 a7       	std	Y+40, r25	; 0x28
 a10:	81 e0       	ldi	r24, 0x01	; 1
 a12:	89 a7       	std	Y+41, r24	; 0x29
 a14:	98 a5       	ldd	r25, Y+40	; 0x28
 a16:	2f 8d       	ldd	r18, Y+31	; 0x1f
 a18:	92 17       	cp	r25, r18
 a1a:	08 f0       	brcs	.+2      	; 0xa1e <delay+0xca>
 a1c:	19 a6       	std	Y+41, r1	; 0x29
 a1e:	8f a1       	ldd	r24, Y+39	; 0x27
 a20:	99 a5       	ldd	r25, Y+41	; 0x29
 a22:	89 2b       	or	r24, r25
 a24:	8f a3       	std	Y+39, r24	; 0x27
 a26:	28 a5       	ldd	r18, Y+40	; 0x28
 a28:	2f 8f       	std	Y+31, r18	; 0x1f
 a2a:	88 89       	ldd	r24, Y+16	; 0x10
 a2c:	98 8d       	ldd	r25, Y+24	; 0x18
 a2e:	89 0f       	add	r24, r25
 a30:	88 a3       	std	Y+32, r24	; 0x20
 a32:	21 e0       	ldi	r18, 0x01	; 1
 a34:	2a a7       	std	Y+42, r18	; 0x2a
 a36:	88 a1       	ldd	r24, Y+32	; 0x20
 a38:	98 89       	ldd	r25, Y+16	; 0x10
 a3a:	89 17       	cp	r24, r25
 a3c:	08 f0       	brcs	.+2      	; 0xa40 <delay+0xec>
 a3e:	1a a6       	std	Y+42, r1	; 0x2a
 a40:	2f a1       	ldd	r18, Y+39	; 0x27
 a42:	88 a1       	ldd	r24, Y+32	; 0x20
 a44:	28 0f       	add	r18, r24
 a46:	2b a7       	std	Y+43, r18	; 0x2b
 a48:	91 e0       	ldi	r25, 0x01	; 1
 a4a:	9c a7       	std	Y+44, r25	; 0x2c
 a4c:	2b a5       	ldd	r18, Y+43	; 0x2b
 a4e:	88 a1       	ldd	r24, Y+32	; 0x20
 a50:	28 17       	cp	r18, r24
 a52:	08 f0       	brcs	.+2      	; 0xa56 <delay+0x102>
 a54:	1c a6       	std	Y+44, r1	; 0x2c
 a56:	9a a5       	ldd	r25, Y+42	; 0x2a
 a58:	2c a5       	ldd	r18, Y+44	; 0x2c
 a5a:	92 2b       	or	r25, r18
 a5c:	9a a7       	std	Y+42, r25	; 0x2a
 a5e:	8b a5       	ldd	r24, Y+43	; 0x2b
 a60:	88 a3       	std	Y+32, r24	; 0x20
 a62:	99 89       	ldd	r25, Y+17	; 0x11
 a64:	29 8d       	ldd	r18, Y+25	; 0x19
 a66:	92 0f       	add	r25, r18
 a68:	99 a3       	std	Y+33, r25	; 0x21
 a6a:	81 e0       	ldi	r24, 0x01	; 1
 a6c:	8d a7       	std	Y+45, r24	; 0x2d
 a6e:	99 a1       	ldd	r25, Y+33	; 0x21
 a70:	29 89       	ldd	r18, Y+17	; 0x11
 a72:	92 17       	cp	r25, r18
 a74:	08 f0       	brcs	.+2      	; 0xa78 <delay+0x124>
 a76:	1d a6       	std	Y+45, r1	; 0x2d
 a78:	8a a5       	ldd	r24, Y+42	; 0x2a
 a7a:	99 a1       	ldd	r25, Y+33	; 0x21
 a7c:	89 0f       	add	r24, r25
 a7e:	8e a7       	std	Y+46, r24	; 0x2e
 a80:	21 e0       	ldi	r18, 0x01	; 1
 a82:	2f a7       	std	Y+47, r18	; 0x2f
 a84:	8e a5       	ldd	r24, Y+46	; 0x2e
 a86:	99 a1       	ldd	r25, Y+33	; 0x21
 a88:	89 17       	cp	r24, r25
 a8a:	08 f0       	brcs	.+2      	; 0xa8e <delay+0x13a>
 a8c:	1f a6       	std	Y+47, r1	; 0x2f
 a8e:	2d a5       	ldd	r18, Y+45	; 0x2d
 a90:	8f a5       	ldd	r24, Y+47	; 0x2f
 a92:	28 2b       	or	r18, r24
 a94:	2d a7       	std	Y+45, r18	; 0x2d
 a96:	9e a5       	ldd	r25, Y+46	; 0x2e
 a98:	99 a3       	std	Y+33, r25	; 0x21
 a9a:	2a 89       	ldd	r18, Y+18	; 0x12
 a9c:	8a 8d       	ldd	r24, Y+26	; 0x1a
 a9e:	28 0f       	add	r18, r24
 aa0:	2a a3       	std	Y+34, r18	; 0x22
 aa2:	91 e0       	ldi	r25, 0x01	; 1
 aa4:	98 ab       	std	Y+48, r25	; 0x30
 aa6:	2a a1       	ldd	r18, Y+34	; 0x22
 aa8:	8a 89       	ldd	r24, Y+18	; 0x12
 aaa:	28 17       	cp	r18, r24
 aac:	08 f0       	brcs	.+2      	; 0xab0 <delay+0x15c>
 aae:	18 aa       	std	Y+48, r1	; 0x30
 ab0:	9d a5       	ldd	r25, Y+45	; 0x2d
 ab2:	2a a1       	ldd	r18, Y+34	; 0x22
 ab4:	92 0f       	add	r25, r18
 ab6:	99 ab       	std	Y+49, r25	; 0x31
 ab8:	81 e0       	ldi	r24, 0x01	; 1
 aba:	8a ab       	std	Y+50, r24	; 0x32
 abc:	99 a9       	ldd	r25, Y+49	; 0x31
 abe:	2a a1       	ldd	r18, Y+34	; 0x22
 ac0:	92 17       	cp	r25, r18
 ac2:	08 f0       	brcs	.+2      	; 0xac6 <delay+0x172>
 ac4:	1a aa       	std	Y+50, r1	; 0x32
 ac6:	88 a9       	ldd	r24, Y+48	; 0x30
 ac8:	9a a9       	ldd	r25, Y+50	; 0x32
 aca:	89 2b       	or	r24, r25
 acc:	88 ab       	std	Y+48, r24	; 0x30
 ace:	29 a9       	ldd	r18, Y+49	; 0x31
 ad0:	2a a3       	std	Y+34, r18	; 0x22
 ad2:	8b 89       	ldd	r24, Y+19	; 0x13
 ad4:	9b 8d       	ldd	r25, Y+27	; 0x1b
 ad6:	89 0f       	add	r24, r25
 ad8:	8b a3       	std	Y+35, r24	; 0x23
 ada:	21 e0       	ldi	r18, 0x01	; 1
 adc:	2b ab       	std	Y+51, r18	; 0x33
 ade:	8b a1       	ldd	r24, Y+35	; 0x23
 ae0:	9b 89       	ldd	r25, Y+19	; 0x13
 ae2:	89 17       	cp	r24, r25
 ae4:	08 f0       	brcs	.+2      	; 0xae8 <delay+0x194>
 ae6:	1b aa       	std	Y+51, r1	; 0x33
 ae8:	28 a9       	ldd	r18, Y+48	; 0x30
 aea:	8b a1       	ldd	r24, Y+35	; 0x23
 aec:	28 0f       	add	r18, r24
 aee:	2c ab       	std	Y+52, r18	; 0x34
 af0:	91 e0       	ldi	r25, 0x01	; 1
 af2:	9d ab       	std	Y+53, r25	; 0x35
 af4:	2c a9       	ldd	r18, Y+52	; 0x34
 af6:	8b a1       	ldd	r24, Y+35	; 0x23
 af8:	28 17       	cp	r18, r24
 afa:	08 f0       	brcs	.+2      	; 0xafe <delay+0x1aa>
 afc:	1d aa       	std	Y+53, r1	; 0x35
 afe:	9b a9       	ldd	r25, Y+51	; 0x33
 b00:	2d a9       	ldd	r18, Y+53	; 0x35
 b02:	92 2b       	or	r25, r18
 b04:	9b ab       	std	Y+51, r25	; 0x33
 b06:	8c a9       	ldd	r24, Y+52	; 0x34
 b08:	8b a3       	std	Y+35, r24	; 0x23
 b0a:	9c 89       	ldd	r25, Y+20	; 0x14
 b0c:	2c 8d       	ldd	r18, Y+28	; 0x1c
 b0e:	92 0f       	add	r25, r18
 b10:	9c a3       	std	Y+36, r25	; 0x24
 b12:	81 e0       	ldi	r24, 0x01	; 1
 b14:	8e ab       	std	Y+54, r24	; 0x36
 b16:	9c a1       	ldd	r25, Y+36	; 0x24
 b18:	2c 89       	ldd	r18, Y+20	; 0x14
 b1a:	92 17       	cp	r25, r18
 b1c:	08 f0       	brcs	.+2      	; 0xb20 <delay+0x1cc>
 b1e:	1e aa       	std	Y+54, r1	; 0x36
 b20:	8b a9       	ldd	r24, Y+51	; 0x33
 b22:	9c a1       	ldd	r25, Y+36	; 0x24
 b24:	89 0f       	add	r24, r25
 b26:	8f ab       	std	Y+55, r24	; 0x37
 b28:	21 e0       	ldi	r18, 0x01	; 1
 b2a:	28 af       	std	Y+56, r18	; 0x38
 b2c:	8f a9       	ldd	r24, Y+55	; 0x37
 b2e:	9c a1       	ldd	r25, Y+36	; 0x24
 b30:	89 17       	cp	r24, r25
 b32:	08 f0       	brcs	.+2      	; 0xb36 <delay+0x1e2>
 b34:	18 ae       	std	Y+56, r1	; 0x38
 b36:	2e a9       	ldd	r18, Y+54	; 0x36
 b38:	88 ad       	ldd	r24, Y+56	; 0x38
 b3a:	28 2b       	or	r18, r24
 b3c:	2e ab       	std	Y+54, r18	; 0x36
 b3e:	9f a9       	ldd	r25, Y+55	; 0x37
 b40:	9c a3       	std	Y+36, r25	; 0x24
 b42:	2d 89       	ldd	r18, Y+21	; 0x15
 b44:	8d 8d       	ldd	r24, Y+29	; 0x1d
 b46:	28 0f       	add	r18, r24
 b48:	2d a3       	std	Y+37, r18	; 0x25
 b4a:	8e a9       	ldd	r24, Y+54	; 0x36
 b4c:	9d a1       	ldd	r25, Y+37	; 0x25
 b4e:	89 0f       	add	r24, r25
 b50:	8d a3       	std	Y+37, r24	; 0x25
 b52:	2e 8d       	ldd	r18, Y+30	; 0x1e
 b54:	2d 83       	std	Y+5, r18	; 0x05
 b56:	8f 8d       	ldd	r24, Y+31	; 0x1f
 b58:	8e 83       	std	Y+6, r24	; 0x06
 b5a:	98 a1       	ldd	r25, Y+32	; 0x20
 b5c:	9f 83       	std	Y+7, r25	; 0x07
 b5e:	29 a1       	ldd	r18, Y+33	; 0x21
 b60:	28 87       	std	Y+8, r18	; 0x08
 b62:	8a a1       	ldd	r24, Y+34	; 0x22
 b64:	89 87       	std	Y+9, r24	; 0x09
 b66:	9b a1       	ldd	r25, Y+35	; 0x23
 b68:	9a 87       	std	Y+10, r25	; 0x0a
 b6a:	2c a1       	ldd	r18, Y+36	; 0x24
 b6c:	2b 87       	std	Y+11, r18	; 0x0b
 b6e:	8d a1       	ldd	r24, Y+37	; 0x25
 b70:	8c 87       	std	Y+12, r24	; 0x0c
 b72:	9d 85       	ldd	r25, Y+13	; 0x0d
 b74:	99 23       	and	r25, r25
 b76:	09 f0       	breq	.+2      	; 0xb7a <delay+0x226>
 b78:	04 cf       	rjmp	.-504    	; 0x982 <delay+0x2e>
#include "COTS/HAL/SevenSegment/SEVSEG_interface.h"

void delay(void){

	u64 wait;
	for(u32 i=0;i<10000;i++){
 b7a:	89 81       	ldd	r24, Y+1	; 0x01
 b7c:	9a 81       	ldd	r25, Y+2	; 0x02
 b7e:	ab 81       	ldd	r26, Y+3	; 0x03
 b80:	bc 81       	ldd	r27, Y+4	; 0x04
 b82:	01 96       	adiw	r24, 0x01	; 1
 b84:	a1 1d       	adc	r26, r1
 b86:	b1 1d       	adc	r27, r1
 b88:	89 83       	std	Y+1, r24	; 0x01
 b8a:	9a 83       	std	Y+2, r25	; 0x02
 b8c:	ab 83       	std	Y+3, r26	; 0x03
 b8e:	bc 83       	std	Y+4, r27	; 0x04
 b90:	89 81       	ldd	r24, Y+1	; 0x01
 b92:	9a 81       	ldd	r25, Y+2	; 0x02
 b94:	ab 81       	ldd	r26, Y+3	; 0x03
 b96:	bc 81       	ldd	r27, Y+4	; 0x04
 b98:	80 31       	cpi	r24, 0x10	; 16
 b9a:	27 e2       	ldi	r18, 0x27	; 39
 b9c:	92 07       	cpc	r25, r18
 b9e:	20 e0       	ldi	r18, 0x00	; 0
 ba0:	a2 07       	cpc	r26, r18
 ba2:	20 e0       	ldi	r18, 0x00	; 0
 ba4:	b2 07       	cpc	r27, r18
 ba6:	08 f4       	brcc	.+2      	; 0xbaa <delay+0x256>
 ba8:	e4 ce       	rjmp	.-568    	; 0x972 <delay+0x1e>
		wait=0;
		while(wait++);
	}
}
 baa:	e8 96       	adiw	r28, 0x38	; 56
 bac:	0f b6       	in	r0, 0x3f	; 63
 bae:	f8 94       	cli
 bb0:	de bf       	out	0x3e, r29	; 62
 bb2:	0f be       	out	0x3f, r0	; 63
 bb4:	cd bf       	out	0x3d, r28	; 61
 bb6:	cf 91       	pop	r28
 bb8:	df 91       	pop	r29
 bba:	08 95       	ret

00000bbc <main>:

int main(){
 bbc:	df 93       	push	r29
 bbe:	cf 93       	push	r28
 bc0:	0f 92       	push	r0
 bc2:	cd b7       	in	r28, 0x3d	; 61
 bc4:	de b7       	in	r29, 0x3e	; 62

	SEVSEG_voidInitialize();
 bc6:	0e 94 af 03 	call	0x75e	; 0x75e <SEVSEG_voidInitialize>
	SEVSEG_voidEnableSegment(SEVSEG_4);
 bca:	84 e0       	ldi	r24, 0x04	; 4
 bcc:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <SEVSEG_voidEnableSegment>

	while(1){
		for(u8 i=0;i<10;i++){
 bd0:	19 82       	std	Y+1, r1	; 0x01
 bd2:	08 c0       	rjmp	.+16     	; 0xbe4 <main+0x28>
			SEVSEG_voidWriteNumber(i);
 bd4:	89 81       	ldd	r24, Y+1	; 0x01
 bd6:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <SEVSEG_voidWriteNumber>
			delay();
 bda:	0e 94 aa 04 	call	0x954	; 0x954 <delay>

	SEVSEG_voidInitialize();
	SEVSEG_voidEnableSegment(SEVSEG_4);

	while(1){
		for(u8 i=0;i<10;i++){
 bde:	89 81       	ldd	r24, Y+1	; 0x01
 be0:	8f 5f       	subi	r24, 0xFF	; 255
 be2:	89 83       	std	Y+1, r24	; 0x01
 be4:	89 81       	ldd	r24, Y+1	; 0x01
 be6:	8a 30       	cpi	r24, 0x0A	; 10
 be8:	a8 f3       	brcs	.-22     	; 0xbd4 <main+0x18>
 bea:	f2 cf       	rjmp	.-28     	; 0xbd0 <main+0x14>

00000bec <_exit>:
 bec:	f8 94       	cli

00000bee <__stop_program>:
 bee:	ff cf       	rjmp	.-2      	; 0xbee <__stop_program>
